# -*- coding: utf-8 -*-
import asyncio
import httpx
from datetime import datetime

BOT_TOKEN = "8124456836:AAFFo3oEJ7d3JNRDy337rHTe9FDTc4-lE8w"
API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"
LOG_FILE = "bot_log.txt"

def log(message):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª –∏ –∫–æ–Ω—Å–æ–ª—å"""
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    log_message = f"[{timestamp}] {message}"
    print(log_message)
    with open(LOG_FILE, 'a', encoding='utf-8') as f:
        f.write(log_message + "\n")

offset = 0

async def send_message(chat_id, text, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    url = f"{API_URL}/sendMessage"
    data = {"chat_id": chat_id, "text": text, "parse_mode": "HTML"}
    if reply_markup:
        data["reply_markup"] = reply_markup
    
    async with httpx.AsyncClient() as client:
        response = await client.post(url, json=data, timeout=10)
        result = response.json()
        log(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {chat_id}: {'OK' if result.get('ok') else 'FAIL'}")
        return result

async def handle_start(chat_id, username):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start"""
    log(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ /start –æ—Ç {username} (chat_id: {chat_id})")
    
    message = f"""–ü—Ä–∏–≤–µ—Ç{f', {username}' if username else ''}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Å—Ç "–ö—Ç–æ —Ç–≤–æ—è —Ä–æ–ª—å –≤ Dota 2?"

–ü—Ä–æ–π–¥–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –∏ —É–∑–Ω–∞–π –∫–∞–∫–∞—è –ø–æ–∑–∏—Ü–∏—è –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ!

–¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —Ç–≤–æ—é —Ä–æ–ª—å –∏–∑ 5 –ø–æ–∑–∏—Ü–∏–π:
‚Ä¢ –ö–µ—Ä—Ä–∏ (Position 1)
‚Ä¢ –ú–∏–¥–µ—Ä (Position 2)  
‚Ä¢ –û—Ñ—Ñ–ª–µ–π–Ω–µ—Ä (Position 3)
‚Ä¢ –•–∞—Ä–¥—Å–∞–ø–æ—Ä—Ç (Position 4)
‚Ä¢ –§—É–ª–ª –°–∞–ø–ø–æ—Ä—Ç (Position 5)

–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!"""
    
    # –ü–æ–∫–∞ WebApp –Ω–∞ localhost - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ –∫–Ω–æ–ø–∫–∏
    # –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –∏ —É–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π URL
    # reply_markup = {
    #     "inline_keyboard": [[
    #         {"text": "üéÆ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç", "web_app": {"url": "https://your-domain.com"}}
    #     ]]
    # }
    
    message += "\n\n‚ö†Ô∏è –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
    message += "\nüì± –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å WebApp –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–º HTTPS –¥–æ–º–µ–Ω–µ."
    message += "\n\n–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ README.md"
    
    await send_message(chat_id, message)

async def get_updates():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
    global offset
    url = f"{API_URL}/getUpdates"
    params = {"offset": offset, "timeout": 30}
    
    async with httpx.AsyncClient(timeout=35) as client:
        response = await client.get(url, params=params)
        return response.json()

async def run_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    global offset
    
    log("=== –ë–û–¢ –ó–ê–ü–£–©–ï–ù ===")
    log("–û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    log("–ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É: https://t.me/RoleMind_bot")
    
    while True:
        try:
            updates = await get_updates()
            
            if not updates.get("ok"):
                log(f"–û—à–∏–±–∫–∞ API: {updates}")
                await asyncio.sleep(5)
                continue
            
            for update in updates.get("result", []):
                offset = update["update_id"] + 1
                
                if "message" not in update:
                    continue
                
                message = update["message"]
                chat_id = message["chat"]["id"]
                text = message.get("text", "")
                user = message.get("from", {})
                username = user.get("first_name", "")
                
                log(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{text}' –æ—Ç {username} (@{user.get('username', 'N/A')})")
                
                if text.startswith("/start") or text.startswith("/test"):
                    await handle_start(chat_id, username)
                elif text.startswith("/help"):
                    await send_message(chat_id, "–ò—Å–ø–æ–ª—å–∑—É–π /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç")
                else:
                    await send_message(chat_id, "–ò—Å–ø–æ–ª—å–∑—É–π /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç")
        
        except Exception as e:
            log(f"–û–®–ò–ë–ö–ê: {e}")
            await asyncio.sleep(5)

if __name__ == "__main__":
    try:
        asyncio.run(run_bot())
    except KeyboardInterrupt:
        log("=== –ë–û–¢ –û–°–¢–ê–ù–û–í–õ–ï–ù ===")

